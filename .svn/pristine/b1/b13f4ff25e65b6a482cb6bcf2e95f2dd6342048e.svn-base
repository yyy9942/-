package main.view;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import com.jfoenix.controls.JFXButton;

import javafx.event.ActionEvent;
import javafx.event.Event;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import searchRoom.view.SearchRoomViewController;
import siteInfo.siteInfo.SiteInfoController;
import vo.MemberVO;
import vo.RoomVO;

public class MainViewController implements Initializable{
	
	private static MainViewController mainViewController;
	private static MemberVO currentMember = null;
	
	/**
	 * siteInfo버튼값 기억하는 변수
	 * 0 = 자주묻는 질문
	 * 1 = 공지사항
	 */
	private static int selectedSiteInfobtn;
	
	public static int getSelectedSiteInfobtn() {
		return selectedSiteInfobtn;
	}
	public static void setSelectedSiteInfobtn(int selectedSiteInfobtn) {
		MainViewController.selectedSiteInfobtn = selectedSiteInfobtn;
	}
	
	/**
	 * mainviewcontroll객체생성과 getInstance()
	 */
	public MainViewController() {
		mainViewController = this;
	}
	public static MainViewController getInstance() {
		return mainViewController;
	}
	
	@FXML
	BorderPane bpMainContainer;
	
	public BorderPane getBpMainContainer() {
		return bpMainContainer;
	}
	
	@FXML
    private VBox vbMain;
	@FXML
	ImageView ivLogo;
	@FXML
	JFXButton btnLogin;
	@FXML
	JFXButton btnRegister;
	@FXML
    private Label lbMypage;
	@FXML
    private ImageView ivMemberIcon;
	@FXML
	private TextField tfSearchRoom;
    @FXML
    private ScrollPane spMain;
    @FXML
    private HBox hbLogin;
    @FXML
    private HBox hbNoLogin;
    @FXML
    private JFXButton btnFrequentQuestion;
    @FXML
    private JFXButton btnNoticeBoard;
	
	/**
	 * 상단 툴바의 '방찾기' 클릭시
	 * @param event
	 */
    @FXML
    void onSearchRoomClick(ActionEvent event) {
    	Parent parent;
		try {
			parent = FXMLLoader.load(getClass().getClassLoader().getResource("searchRoom/view/searchRoom.fxml"));
			parent.getStylesheets().add(getClass().getResource("../../searchRoom/view/app.css").toString());
			bpMainContainer.setCenter(parent);
		} catch (IOException e) {
			e.printStackTrace();
		}
    }
    /**
     * 하단 검색창의 '방찾기' 클릭시
     * 검색창에 공백값을 넣거나 입력하지 않으면
     * 상단 툴바의 '방찾기'클릭과 같은 이벤트를 발생시킨다.
     * 검색창에 입력을 하면
     * 입력한 위치의 좌표값을 받아와
     * 지도에 표시하여 그 위치의 방을 보여준다
     * @param event
     */
    @FXML
    void onMainSearchRoomClick(ActionEvent event) {
    	String searchStr = tfSearchRoom.getText();
    	onSearchRoomClick(event);
    	if(searchStr.trim().isEmpty()) {
    		return;
    	}else {
    		SearchRoomViewController.getInstance().setMainMap(tfSearchRoom.getText());
    	}
    }
    
    /**
     * 중개사 사이트로 이동 버튼 클릭시
     * @param event
     */
    @FXML
    void onRealtorClick(ActionEvent event) {
    	
    }

    /**
     * 방주인 사이트로 이동 버튼 클릭시
     * @param event
     */
    @FXML
    void onOwnerClick(ActionEvent event) {
    	Parent parent;
		try {
			parent = FXMLLoader.load(getClass().getClassLoader().getResource("owner/main/ownerMain.fxml"));
			MainView.getPrimaryStage().setScene(new Scene(parent));
		} catch (IOException e) {
			e.printStackTrace();
		}
    	
    }


    /**
     * 관심목록 버튼 클릭시
     * @param event
     */
    @FXML
    void onFavoritClick(ActionEvent event) {

    }

    /**
     * 방 올리기 버튼 클릭시
     * @param event
     */
    @FXML
    void onRoomRegisterClick(ActionEvent event) {

    }

    /**
     * 알림 버튼 클릭시
     * @param event
     */
    @FXML
    void onNoticeClick(ActionEvent event) {

    }


    /**
     * 로그인 버튼 클릭시
     * @param event
     */
    @FXML
    void onLoginClick(ActionEvent event) {
    	Parent parent;
    	try {
			parent = FXMLLoader.load(getClass().getClassLoader().getResource("member/login/LogInSignUp.fxml"));
			Stage stage = new Stage();
			Scene scene = new Scene(parent);
			stage.setScene(scene);
			stage.show();
		} catch (IOException e) {
			e.printStackTrace();
		}
    }

    /**
     * 회원가입 버튼 클릭시
     * @param event
     */
    @FXML
    void onRegisterClick(ActionEvent event) {
    	Parent parent;
    	try {
			parent = FXMLLoader.load(getClass().getClassLoader().getResource("member/signup/SignUp.fxml"));
			Stage stage = new Stage();
			Scene scene = new Scene(parent);
			stage.setScene(scene);
			stage.show();
		} catch (IOException e) {
			e.printStackTrace();
		}
    }
    
    /**
     * 방 찾기 클릭시
     * @param room
     */
    public void onRoomInfoClick(RoomVO room) {
    	Parent parent;
    	try {
			parent = FXMLLoader.load(getClass().getClassLoader().getResource("roomInfo/view/roomInfo.fxml"));
			bpMainContainer.setCenter(parent);
		} catch (IOException e) {
			e.printStackTrace();
		}
    }
    
    public static MemberVO getCurrentMember() {
    	return currentMember;
    }
    
    /**
     * 현재 로그인 한 멤버를 저장하는 메서드
     * @param currentMember
     */
    public void setCurrentMember(MemberVO currentMember) {
    	this.currentMember = currentMember;
    }
    
    public void setDefaultMain() {
    	bpMainContainer.setCenter(vbMain);
    }
    
    /**
     * 로그인시 작동할 메서드들
     */
    public void onLogIn(MemberVO currentMember) {
    	hbLogin.setVisible(true);
    	hbNoLogin.setVisible(false);
    	
    	this.currentMember = currentMember;
    }
    
    /**
     * 로그아웃시 작동할 메서드들
     */
    public void onLogOut() {
    	hbLogin.setVisible(false);
    	hbNoLogin.setVisible(true);
    	this.currentMember = null;
    }
    
    /**
     * 자주 묻는 질문들
     */
    @FXML
    void onFrequentQuestion(ActionEvent event) {
    	setSelectedSiteInfobtn(0);
    	try {
			Parent siteInfoNodes = FXMLLoader.load(getClass().getClassLoader().getResource("siteInfo/siteInfo/SiteInfo.fxml"));
			bpMainContainer.setCenter(siteInfoNodes);
			
		} catch (IOException e) {
			e.printStackTrace();
		}
    }
    
    /**
     * 공지사항 게시판
     */
    @FXML
    void showNoticeBoard(ActionEvent event) {
    	setSelectedSiteInfobtn(1);
    	try {
			Parent siteInfoNodes = FXMLLoader.load(getClass().getClassLoader().getResource("siteInfo/siteInfo/SiteInfo.fxml"));
			bpMainContainer.setCenter(siteInfoNodes);
			
		} catch (IOException e) {
			e.printStackTrace();
		}
    }
    
	
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		ivLogo.setImage(new Image("res/logo.png"));
		/**
		 * 니방내방 로고 클릭시
		 */
		ivLogo.setOnMouseClicked(new EventHandler<Event>() {
			public void handle(Event event) {
				bpMainContainer.setCenter(vbMain);
			};
		});
		
		/**
		 * 마이페이지 클릭시
		 */
		ivMemberIcon.setOnMouseClicked(new EventHandler<Event>() {
			@Override
			public void handle(Event event) {
				Parent parent;
		    	try {
					parent = FXMLLoader.load(getClass().getClassLoader().getResource("member/mypage/MemberMyPage.fxml"));
					bpMainContainer.setCenter(parent);
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		});
	}
}
