<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="roomInfo">

	



	<select id="getRoomImages" parameterClass="Integer"
		resultClass="vo.RoomImgVO">
		SELECT * FROM ROOM_IMG WHERE ROOM_ID = #ROOM_ID#
	</select>
	
	
	
	<select id="memLikeRoom" parameterClass="java.util.HashMap" resultClass="Integer">
		SELECT COUNT(*) FROM LIKES 
		WHERE mem_id = #mem_id# 
		AND room_id = #room_id#
	</select>
	
	<insert id="insertLike" parameterClass="vo.LikeVO">
		INSERT INTO LIKES(like_date, mem_id, room_id) 
		VALUES(#like_date#, #mem_id#, #room_id#)
	</insert>

	<delete id="deleteLike" parameterClass="Integer">
		DELETE FROM LIKES 
		WHERE LIKE_ID = #like_id#
	</delete>
	
	<select id="getLike" parameterClass="java.util.HashMap" resultClass="vo.LikeVO">
		SELECT * FROM LIKES 
		WHERE mem_id = #mem_id# 
		AND room_id = #room_id#
	</select>
	
	<select id="getLikeCount" parameterClass="Integer" resultClass="Integer">
		SELECT COUNT(*) FROM LIKES 
		WHERE ROOM_ID = #room_id#
	</select>

	<select id="getViewCount" parameterClass="Integer" resultClass="Integer">
		SELECT COUNT(*) FROM SEARCH_LOG 
		WHERE room_id = #room_id#
	</select>
	<insert id="sendContract" parameterClass="vo.ContractVO">
		INSERT INTO CONTRACT(mem_id, room_id, realtor_id) VALUES(#mem_id#, #room_id#, 1)
	</insert>
	
	<select id="isContract" parameterClass="java.util.HashMap" resultClass="Integer">
		SELECT COUNT(*) FROM CONTRACT WHERE mem_id = #mem_id# AND room_id = #room_id#
	</select>

	<parameterMap class="java.util.HashMap" id="latlng">
		<parameter property="lat" javaType="java.lang.Float"/>
		<parameter property="lng" javaType="java.lang.Float"/>
		<parameter property="lat" javaType="java.lang.Float"/>
	</parameterMap>
	
	<select id="getSearchCount" parameterMap="latlng" resultClass="Integer">
		SELECT count(*) FROM (
		 SELECT (6371 * acos(cos(radians(?)) * cos(radians(lng)) * cos(radians(lat) - radians(?)) + sin(radians(?)) * sin(radians(lng)))) AS distance 
		 FROM CORMARCIAR) as DATA 
		WHERE DATA.distance <![CDATA[ < ]]> 1
	</select>
	
</sqlMap>
    
    