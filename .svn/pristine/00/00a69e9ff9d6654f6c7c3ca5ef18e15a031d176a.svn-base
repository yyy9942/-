package searchRoom.view;

import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;
import java.util.Map;
import java.util.ResourceBundle;

import com.ibatis.sqlmap.client.SqlMapClient;

import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Label;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.StackPane;
import javafx.scene.web.WebView;
import main.view.BuildedSqlMapConfig;
import searchRoom.service.ISearchRoomService;
import searchRoom.service.SearchRoomServiceImpl;
import vo.RoomImgVO;
import vo.RoomVO;

public class SearchRoomViewController implements Initializable{
	
	@FXML
	GridPane gridPaneMain;
	@FXML
	WebView webViewMainMap;
	@FXML
	ImageView ivLogo;
    @FXML
    private Label lbRoomNumber;
    @FXML
    private StackPane spCenterPane;
    
    private static SearchRoomViewController srViewController;
    
    public SearchRoomViewController() {
    	srViewController = this;
	}
    
    public static SearchRoomViewController getInstance() {
    	return srViewController;
    }

    ISearchRoomService service = SearchRoomServiceImpl.getInstance();
	SqlMapClient smc;
	
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		try {
			setDatabase();
			setMainRoomView();
			setMainMap();
		} catch (IOException e1) {
			e1.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	private void setDatabase() throws IOException {
		smc = BuildedSqlMapConfig.getInstance();
	}
	
	/**
	 * @author 정준
	 * @throws SQLException
	 * 메인 뷰에 방 8개를 세팅하는 메서드
	 */
	private void setMainRoomView() throws SQLException {
		ObservableList<RoomVO> roomList = service.getRoomList();
		Parent subParent;
		try {
			FXMLLoader loader;
			CellController controller;
			
			
			int i=0;
			int j=0;
			while(roomList.size() > 0) {
				RoomVO room = roomList.get(j*4+i);
				RoomImgVO roomImg = service.getRoomImg(room.getRoom_id());
				loader = new FXMLLoader(getClass().getResource("../view/cell.fxml"));
				subParent = loader.load();
				subParent.getStylesheets().add(getClass().getResource("../view/cell.css").toString());
				gridPaneMain.add(subParent, i, j);
				controller = loader.getController();
				controller.setRoomImage(new Image(roomImg.getImg_uri()));
				controller.setRoomVO(room);
				
				if(j*4 + i < 7 && j*4 + i < roomList.size()-1) {
					if(i == 3) {
						j++;
						i = 0;
					}else {
						i++;
					}
				}else {
					break;
				}
			}
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	private void setMainMap() {
		webViewMainMap.getEngine().load("http://yyy9942.cafe24.com/ddit/DaumMap.html");
	}
	public void setMainMap(String searchStr) {
		Map<String, String> resultMap = service.getLatLng(searchStr);
		if(resultMap.isEmpty()) {
			webViewMainMap.getEngine().load("http://yyy9942.cafe24.com/ddit/DaumMap.html");
			Alert alert = new Alert(AlertType.INFORMATION);
			alert.setTitle("검색 결과");
			alert.setContentText("잘못된 주소를 입력하셨습니다");
			alert.show();
		}else {
			String lat = resultMap.get("lat");
			String lng = resultMap.get("lng");
			webViewMainMap.getEngine().load("http://yyy9942.cafe24.com/ddit/DaumMap.html?lat="+lat+"&lng="+lng);
		}
		
	}
}
