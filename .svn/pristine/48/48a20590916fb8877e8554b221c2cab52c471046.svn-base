package siteInfo.articlePage;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import com.jfoenix.controls.JFXButton;
import com.jfoenix.controls.JFXTextArea;

import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.control.Alert;
import javafx.scene.control.ButtonType;
import javafx.scene.control.Label;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import main.view.MainViewController;
import siteInfo.service.ISiteInfoService;
import siteInfo.service.ISiteInfoServiceImpl;
import siteInfo.siteInfo.SiteInfoController;
import siteInfo.siteInfoUpdate.SiteInfoUpdatePageController;
import vo.BoardVO;
import vo.MemberVO;

public class ArticlePageController implements Initializable{
	
	private BoardVO currentBoardVO;
	MemberVO currentMember = MainViewController.getCurrentMember();
	ISiteInfoService service = ISiteInfoServiceImpl.getInstance();
	SiteInfoController sic = SiteInfoController.getInstance();	
	
	@FXML
    private Label lbArticleCategory;

    @FXML
    private HBox hbCommentDomain;

    @FXML
    private VBox vbArticle;

    @FXML
    private JFXButton btnEdit;

    @FXML
    private JFXTextArea taContent;

    @FXML
    private ImageView imageView;

    @FXML
    private Label lbUploadDate;

    @FXML
    private JFXButton btnDelete;

    @FXML
    private VBox vbArticleList;

    @FXML
    private JFXButton btnWriter;

    @FXML
    private JFXButton btnAddComment;

    @FXML
    private Label lbArticleTitle;

    @FXML
    private VBox vbCommentList;
    
    
    @FXML
    void onAddComment(ActionEvent event) {

    }
    
    @FXML
    void onBtnLeftAction(ActionEvent event) {
    	if(current_page != 0) {
			current_page--;
			vbArticleList.getChildren().clear();
			setDataList(list);
		}
    }

    @FXML
    void onBtnRightAction(ActionEvent event) {
    	if(current_page < max_page) {
			if(list.size() - (max_page * SHOW_MAX_IDX) == 0 && current_page == max_page-1)
				return;
			
			current_page++;
			vbArticleList.getChildren().clear();
			setDataList(list);
		}
    }
    
    @FXML
    void onEditBtn(ActionEvent event) {
    	if(MainViewController.getCurrentMember().getMem_id().equals(currentBoardVO.getMem_id())) {
    		try {
    			FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource("siteInfo/siteInfoUpdate/SiteInfoUpdatePage.fxml"));
    			Parent SiteInfoUpdatePageNodes = loader.load();
    			SiteInfoUpdatePageController apc = loader.getController();
    			apc.setItem(currentBoardVO);
    			BorderPane bp = sic.getBpSiteInfoContainer();
    			bp.setCenter(SiteInfoUpdatePageNodes);
    		} catch (IOException e) {
    			e.printStackTrace();
    		}
    	}
    }

    @FXML
    void onDeleteBtn(ActionEvent event) {
    	if(MainViewController.getCurrentMember().getMem_id().equals(currentBoardVO.getMem_id())) {
    		Alert confirm = new Alert(AlertType.CONFIRMATION);
			confirm.setTitle("경고");
			confirm.setContentText("현재 게시글을 삭제하실겁니까?");

			ButtonType btnResult = confirm.showAndWait().get();

			if (btnResult == ButtonType.OK) {
				ISiteInfoService service = ISiteInfoServiceImpl.getInstance();
				int cnt = service.deleteArticle(currentBoardVO);

				if (cnt>0) {
					Alert info = new Alert(AlertType.INFORMATION);
					info.setTitle("게시글 삭제");
					info.setContentText("게시글을 성공적으로 삭제하였습니다.");
					info.showAndWait();

					try {
						if(sic.getBtnNoticeBoard().isSelected()) {
							FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource("siteInfo/noticeBoard/NoticeBoard.fxml"));
							Parent noticeBoardNodes = loader.load();
							BorderPane currentContainer = sic.getBpSiteInfoContainer();
							currentContainer.setCenter(noticeBoardNodes);
						}else if(sic.getBtnFrequentQuestions().isSelected()) {
							FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource("siteInfo/frequentQuestion/FrequentQuestion.fxml"));
							Parent fQBoardNodes = loader.load();
							BorderPane currentContainer = sic.getBpSiteInfoContainer();
							currentContainer.setCenter(fQBoardNodes);
						}
					} catch (IOException e) {
						e.printStackTrace();
					}
				}
			}
    	}
    }
    
    public void setCurrentBoardVO(BoardVO bv) {
    	currentBoardVO = bv;
    }
    
    /**
     * 게시판
     */
	final int SHOW_MAX_IDX = 5;
    int current_page = 0;
	int max_page;
	int max_idx;
	ObservableList<BoardVO> list;

	public void setDataList(ObservableList<BoardVO> list) {
		max_page = this.list.size() / SHOW_MAX_IDX;
		max_idx = SHOW_MAX_IDX;

		if (current_page == max_page) {
			max_idx = this.list.size() - (max_page * SHOW_MAX_IDX);
		}

		try {
			FXMLLoader loader;
			BoardCellController controller;
			Parent parent;
			int startIdx = SHOW_MAX_IDX * current_page;
			vbArticleList.getChildren().clear();
			for (int i = startIdx; i < startIdx + max_idx; i++) {
				BoardVO bv = this.list.get(i);
				loader = new FXMLLoader(getClass().getResource("/siteInfo/articlePage/BoardCell.fxml"));
				parent = loader.load();
				controller = loader.getController();
				controller.setItem(bv, i);
				vbArticleList.getChildren().add(parent);
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void setItem(BoardVO bv) {
		currentBoardVO = bv;
		lbArticleTitle.setText(bv.getBoard_title());
		btnWriter.setText(bv.getMem_id());
		lbUploadDate.setText(bv.getBoard_date().toString());
		if(bv.getBoard_img()!=null) {
			imageView.setFitWidth(500);
			imageView.setFitHeight(400);
			imageView.setImage(new Image(bv.getBoard_img()));
		}
		taContent.setText(bv.getBoard_content());
	}
	
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		list = service.getNoticeBoardList();
		setDataList(list);
		if(currentMember.getMem_auth().trim().equals("admin")) {
			btnEdit.setVisible(true);
			btnEdit.setDisable(false);
			btnDelete.setVisible(true);
			btnDelete.setDisable(false);
		}
	}
}
